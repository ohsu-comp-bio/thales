
syntax = "proto3";


package thales;


import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";

message Topic {
  string name = 1;
  string message_type = 2;
  repeated string sources = 3;
  repeated string authors = 4;
  repeated string import_commands = 5;
  map<string, string> tags = 6;
}

message TopicName {
  string name = 1;
}

message TopicList {
  repeated string names = 1;
}

message TopicQuery {
  string message_type = 1;
  string source = 2;
  map<string, string> tags = 3;
}

message MessageTypeResponse {}

service TopicDB {
  rpc AddTopic(Topic) returns (TopicName) {
    option (google.api.http) = {
      post: "/v1/thales/topics"
      body: "*"
    };
  }
  
  rpc GetTopic(TopicName) returns (Topic) {
    option (google.api.http) = {
      get: "/v1/thales/topics/{name}"
    };
  }
  
  rpc SearchTopic(TopicQuery) returns (TopicList) {
    option (google.api.http) = {
      post: "/v1/thales/search"
      body: "*"
    };
  }
  
  rpc PutMessageType(google.protobuf.DescriptorProto) returns (MessageTypeResponse) {
    option (google.api.http) = {
      post: "/v1/thales/messages"
    };
  }
  
};

message PubRequest {
  string topic = 1;
  bytes message = 2;
}

message PubResponse {
  uint64 offset = 1;
}

message SubRequest {
  string topic = 1;
  uint64 offset = 2;
}

message SubResponse {
  string topic = 1;
  uint64 offset = 2;
  bytes message = 3;
}

service Streams {
  rpc Produce(PubRequest) returns (PubResponse) {
    option (google.api.http) = {
      post: "/v1/thales/topics/{topic}"
      body: "*"
    };
  }
  
  rpc Subscribe(SubRequest) returns (stream SubResponse) {
    option (google.api.http) = {
      get: "/v1/thales/stream/{topic}"
      
      additional_bindings {
        get: "/v1/thales/stream/{topic}/{offset}"
      }    
    };
  }
};