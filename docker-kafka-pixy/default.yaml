# TCP address that gRPC API server should listen on.
grpc_addr: 0.0.0.0:19091

# TCP address that RESTful API server should listen on.
tcp_addr: 0.0.0.0:19092

# Unix domain socket address that RESTful API server should listen on.
# Listening on a unix domain socket is disabled by default.
# unix_addr: "/var/run/kafka-pixy.sock"

# A map of cluster names to respective proxy configurations. The first proxy
# in the map is considered to be `default`. It is used in API calls that do not
# specify cluster name explicitly.
proxies:

  # Name of a Kafka+ZooKeeper cluster. The only requirement to the name is that
  # it should be unique in this config file. The value of this parameter is
  # a configuration of a proxy to access the cluster.
  default:

    # Unique ID that identifies a Kafka-Pixy instance in both ZooKeeper and
    # Kafka. It is automatically generated by default and it is recommended to
    # leave it like that.
    # client_id: AUTOGENERATED

    # Kafka parameters section.
    kafka:

      # List of seed Kafka peers that Kafka-Pixy should access to resolve the
      # Kafka cluster topology.
      seed_peers:
        - kafka:9092

      # Version of the Kafka cluster. Supported versions are 0.8.2.2 - 0.10.1.0
      version: 0.10.0.0

    # ZooKeeper parameters section.
    zoo_keeper:

      # List of seed ZooKeeper peers that Kafka-Pixy should access to resolve the
      # ZooKeeper cluster topology.
      seed_peers:
        - kafka:2181

      # Path to the directory where Kafka keeps its data.
      # chroot: "/"

    # Producer parameters section.
    producer:

      # Size of all buffered channels created by the producer module.
      channel_buffer_size: 4096

      # The type of compression to use on messages. Allowed values are:
      # none, gzip, snappy, and lz4.
      compression: snappy

      # The best-effort number of bytes needed to trigger a flush.
      flush_bytes: 1048576

      # The best-effort frequency of flushes.
      flush_frequency: 500ms

      # How long to wait for the cluster to settle between retries.
      retry_backoff: 10s

      # The total number of times to retry sending a message before giving up.
      retry_max: 6

      # The level of acknowledgement reliability needed from the broker.
      # Allowed values are:
      #  * no_response:    the broker doesn't send any response, the TCP ACK
      #                    is all you get.
      #  * wait_for_local: the broker responds as soon as it commits to the
      #                    local disk.
      #  * wait_for_all:   the broker waits for all in-sync replicas to commit
      #                    before responding.
      required_acks: wait_for_all

      # Period of time that Kafka-Pixy should keep trying to submit buffered
      # messages to Kafka. It is recommended to make it large enough to survive
      # a ZooKeeper leader election in your setup.
      shutdown_timeout: 30s

    # Consumer parameters section.
    consumer:

      # Period of time that Kafka-Pixy should wait for an acknowledgement
      # before retrying. It must be less then registration_timeout.
      ack_timeout: 15s

      # Size of all buffered channels created by the consumer module.
      channel_buffer_size: 64

      # The default number of message bytes to fetch from the broker in each
      # request. This should be larger than the majority of your messages,
      # or else the consumer will spend a lot of time negotiating sizes and
      # not actually consuming.
      fetch_bytes: 1048576

      # Consume request will wait at most this long until a message from the
      # specified group/topic becomes available.
      long_polling_timeout: 3s

      # How frequently to commit offsets to Kafka.
      offsets_commit_interval: 500ms

      # Consumer should wait this long after it gets notification that a
      # consumer joined/left its consumer group before starting rebalancing.
      rebalance_delay: 250ms

      # Period of time that Kafka-Pixy should keep registration with a consumer
      # group or subscription for a topic in the absence of requests to the
      # consumer group or topic.
      registration_timeout: 20s

      # If a request to a Kafka-Pixy fails for any reason, then it should wait this
      # long before retrying.
      retry_backoff: 500ms
